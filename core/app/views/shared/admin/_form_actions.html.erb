<%

  actions_id = (local_assigns.inspect.hash**2).to_s[0,5]
  
  unless (hide_submit ||= false)
    submit_button_text  ||= t('.save')
    submit_button_id    ||= "submit_button"
    submit_button_title ||= nil
  end

  unless defined?(hide_cancel).presence
    hide_cancel = from_dialog?
  end
  
  unless defined?(show_preview).presence
    show_preview = false
  end

  unless hide_cancel
    cancel_button_text  ||= t('.cancel')
    unless defined?(cancel_title)
      cancel_title = t('.cancel_lose_changes')
    end
    cancel_button_id    ||= "cancel_button"

    cancel_url          ||= (((back = url_for(:back)).include?('javascript') or action_name =~ /^(create|update)$/) ? send("admin_#{f.object_name.to_s.pluralize}_url") : back)
  end

  continue_editing = defined?(continue_editing) ? continue_editing : (f.object.present? and f.object.persisted?)

  unless defined?(hide_delete).presence
    hide_delete = (from_dialog? or
                   f.object.nil? or (f.object.respond_to?(:persisted?) ? !f.object.persisted? : f.object.new_record?) or
                   (f.object.respond_to?(:deletable?) && !f.object.deletable?))
  end

  unless hide_delete
    delete_button_text  ||= t('.delete')
    delete_title        ||= nil
    delete_confirmation ||= nil
    delete_button_id    ||= "delete_button"
    delete_url          ||= eval("admin_#{f.object_name}_path(#{f.object.id})")
  end

  paginate_collection = nil
  if (paginate ||= {}).length > 0 && paginate.keys.include?(:collection)
    paginate_collection = paginate.delete(:collection)
  end
  paginate.delete(:url) # We used to have a LinkRenderer that did this
-%>
<% if from_dialog? %>
<input type='hidden' name='modal' value='true' />
<input type='hidden' name='dialog' value='true' />
<% end %>

<div id="form-actions-<%=actions_id%>" class='form-actions<%= ' form-actions-dialog' if from_dialog? %>'>
  <div class='form-actions-left'>
    <%= submit_tag submit_button_text,
                   :id => submit_button_id,
                   :name => nil,
                   :class => "wymupdate button",
                   :tooltip => submit_button_title unless hide_submit %>

    <%= render :partial => "/shared/admin/continue_editing", :locals => {:f => f} if continue_editing -%>
    <%= hidden_field_tag :continue_editing, false if continue_editing %>

    <%= link_to("Preview", "/pages/#{f.object.id}/preview",
                :title => "Preview changes before saving", 
                :class => "preview button") if show_preview -%>

    <%= link_to(cancel_button_text, cancel_url,
                :title => cancel_title,
                :id => cancel_button_id,
                :class => "close_dialog button") unless hide_cancel %>
    <span class="loading-spinner">
      <%= image_tag "/images/refinery/ajax-loader.gif" %>
    </span>
  </div>
  <div class='form-actions-right'>
    <%= link_to(delete_button_text, delete_url,
                :title => delete_title,
                :id => delete_button_id,
                :method => :delete,
                :confirm => delete_confirmation,
                :class => "button confirm-delete") unless hide_delete %>

    <%= will_paginate paginate_collection, paginate unless paginate_collection.nil? %>
  </div>
</div>

<% content_for :javascripts do %>
<script type="text/javascript" charset="utf-8">
  // Thanks to Tobias Cohen (http://stackoverflow.com/questions/1184624/serialize-form-to-json-with-jquery
  $.fn.serializeObject = function(){
      var o = {};
      var a = this.serializeArray();
      $.each(a, function() {
          if (o[this.name] !== undefined) {
              if (!o[this.name].push) {
                  o[this.name] = [o[this.name]];
              }
              o[this.name].push(this.value || '');
          } else {
              o[this.name] = this.value || '';
          }
      });
      return o;
  };


  $("#form-actions-<%=actions_id%> .preview.button").live('click', function() {
    var form = $(this).closest('form');
    var url = $(this).attr('href');
    
    // remove pagepart references
    var serialized = form.serializeObject();
    for (var key in serialized) {
      if (key.match(/\[id\]$/)) {
        delete serialized[key];
      }
    }
    
    // fill in the blanks with primary locale data
    for (var key in serialized) {
      if (serialized[key] == "false") {
        $field = $("[name='"+key+"']");
        if (key.match(/\[image\]/))
          serialized[key] = $field.data("fallback-id");
        else
          serialized[key] = $field.data("fallback");
        
        if (serialized[key] === undefined)
          serialized[key] = "";
      }
    }
    
    $.post(url, serialized, function(data) {
      var win = window.open('_blank');
      try {
        with(win.document) {
          open();
          write(data);
          close();
        }
      } catch (error) {
        alert("The preview could not be displayed. Please ensure your pop-up blocker is set to allow pop-ups from this site.");
      }
    });
    return false;
  });
</script>
<%end %>
